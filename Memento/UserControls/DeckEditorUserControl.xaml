<UserControl x:Class="Memento.UserControls.DeckEditorUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Memento"
             xmlns:dal="clr-namespace:Memento.DAL;assembly=Memento.DAL"
             mc:Ignorable="d" d:Background="White"
             d:DesignHeight="1080" d:DesignWidth="1920">
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static local:Commands.SaveCardCommand}"
                        Executed="SaveCard" CanExecute="SaveCardCommand_CanExecute"/>
        
        <CommandBinding Command="{x:Static local:Commands.RemoveCardCommand}"
                        Executed="RemoveCard" CanExecute="RemoveCardCommand_CanExecute"/>

        <CommandBinding Command="{x:Static local:Commands.SaveDeckCommand}"
                        Executed="SaveDeck"/>
    </UserControl.CommandBindings>

    <UserControl.Resources>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid/>
                            </BulletDecorator.Bullet>

                            <TextBlock x:Name="DifficultyText"
                                       VerticalAlignment="Stretch" Margin="0 0 0 5"
                                       HorizontalAlignment="Center">
                                <ContentPresenter/>
                            </TextBlock>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="DifficultyText" Property="FontWeight" Value="Bold"/>
                                <Setter TargetName="DifficultyText" Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:EnumBooleanConverter x:Key="enumBooleanConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="3*" MinWidth="600"/>
            <ColumnDefinition Width="36"/>
            <ColumnDefinition Width="*" MinWidth="400"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition Height="25*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text=" Memento - DeckEditor" Grid.ColumnSpan="2"/>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
                <RowDefinition Height="42*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="21*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="12*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="30*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    
                    <Viewbox VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch" Grid.Row="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Difficulty" Grid.Row="0" Margin="0 0 0 5"
                                 HorizontalAlignment="Center" FontStyle="Italic"/>
                            <StackPanel Grid.Row="1" HorizontalAlignment="Center">
                                <RadioButton Content="Beginner" IsChecked="{Binding Path=CurrentCard.Difficulty, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static dal:Difficulty.Beginner}}"/>
                                <RadioButton Content="Intermediate" IsChecked="{Binding Path=CurrentCard.Difficulty, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static dal:Difficulty.Intermediate}}"/>
                                <RadioButton Content="Advanced" IsChecked="{Binding Path=CurrentCard.Difficulty, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static dal:Difficulty.Advanced}}"/>
                                <RadioButton Content="None" IsChecked="{Binding Path=CurrentCard.Difficulty, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static dal:Difficulty.None}}"/>
                            </StackPanel>
                        </Grid>
                    </Viewbox>
                </Grid>

                <Grid Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="14*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="14*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>

                    <Rectangle Grid.Row="1" Grid.Column="1" Stroke="DarkGray"
                           Fill="LightGray"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"/>

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="Image"
                       HorizontalAlignment="Center" Foreground="Gray"
                       VerticalAlignment="Center"/>

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="(Click to add)"
                       HorizontalAlignment="Center" Foreground="Gray" Margin="0 25 0 0"
                       VerticalAlignment="Center"/>

                    <Image Grid.Row="1" Grid.Column="1" Source="{Binding CurrentCard.ImagePath}"
                       ImageFailed="Image_ImageFailed"/>

                    <Button Grid.Row="1" Grid.Column="1" Click="Button_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>

            <Grid Grid.Row="3" MinHeight="200">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="5*"/>
                    </Grid.RowDefinitions>
                    
                    <TextBox Grid.Row="1" x:Name="WordTextBox" Text="{Binding CurrentCard.Word, Mode = TwoWay}"
                             Background="#F7F7F7F7" TextAlignment="Center"
                             VerticalContentAlignment="Center"/>

                    <TextBlock Grid.Row="1" IsHitTestVisible="False" Text="Word"
                           HorizontalAlignment="Center" Foreground="DarkGray"
                           VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Text, ElementName=WordTextBox}" Value=""/>
                                            <Condition Binding="{Binding IsFocused, ElementName=WordTextBox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBox Grid.Row="3" Background="#F7F7F7F7" x:Name="TranscriptionTextBox"
                             TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding CurrentCard.Transcription, Mode = TwoWay}"/>

                    <TextBlock Grid.Row="3" IsHitTestVisible="False" Text="Transcription"
                           HorizontalAlignment="Center" Foreground="DarkGray"
                           VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Text, ElementName=TranscriptionTextBox}" Value=""/>
                                            <Condition Binding="{Binding IsFocused, ElementName=TranscriptionTextBox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <TextBox Name="DescriptionTextBox" Background="#F7F7F7F7"
                         Grid.Column="2" MaxLength="200" Text="{Binding CurrentCard.Description, Mode = TwoWay}"/>

                <TextBlock Grid.Column="2" IsHitTestVisible="False" Text="Description..."
                           HorizontalAlignment="Left"
                           Margin="5,2,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Text, ElementName=DescriptionTextBox}" Value=""/>
                                        <Condition Binding="{Binding IsFocused, ElementName=DescriptionTextBox}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock Grid.Column="2" IsHitTestVisible="False" Text="0/200"
                           HorizontalAlignment="Right" VerticalAlignment="Bottom"
                           Margin="0 0 5 3" Foreground="DarkGray" x:Name="DescriptionLimit"/>
            </Grid>

            <StackPanel Grid.Row="5" Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <Button Content="Save Card" Margin="0 0 120 0" Width="100"/>
                <Button Content="Cancel" Width="100"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ComboBox Grid.Row="0" Width="100" Margin="0 0 25 0" x:Name="DecksCombox"
                      SelectionChanged="ComboBox_SelectionChanged"
                      DropDownClosed="ComboBox_DropDownClosed"
                      ItemsSource="{Binding DeckEditor.AllDecks}" HorizontalAlignment="Left"/>

            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Content="New Card" Width="100" Margin="0 0 12 0"/>
                <Button Content="Save Card" Width="100" Margin="0 0 12 0"
                        Command="{x:Static local:Commands.SaveCardCommand}"/>

                <Button Content="Remove Card" Width="100" Margin="0 0 12 0"
                        Command="{x:Static local:Commands.RemoveCardCommand}"/>

                <Button Content="Save Deck" Width="100"
                        Command="{x:Static local:Commands.SaveCardCommand}"/>
            </StackPanel>

            <TextBlock Grid.Row="4" Text="Cards: "/>

            <ScrollViewer Grid.Row="6">
                <DataGrid IsReadOnly="True" ItemsSource="{Binding DeckEditor.Deck}"
                          x:Name="CardsDataGrid">
                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseDoubleClick" Handler="Row_DoubleClick"/>
                        </Style>
                    </DataGrid.ItemContainerStyle>
                    
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Card" Binding="{Binding Path=Cards}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </ScrollViewer>

            <TextBlock Grid.Row="8" Text="Tags:"/>
            
            <ScrollViewer Grid.Row="10">
                <!--<DataGrid ItemsSource="{Binding DeckEditor.Deck}" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=Cards.Word}"/>
                    </DataGrid.Columns>
                </DataGrid>-->
            </ScrollViewer>
        </Grid>
    </Grid>
</UserControl>
