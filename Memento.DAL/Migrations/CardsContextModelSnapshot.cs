// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Memento.DAL.Migrations
{
    [DbContext(typeof(CardsContext))]
    partial class CardsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Memento.DAL.CardModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("card_id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Difficulty")
                        .HasColumnType("TEXT")
                        .HasColumnName("difficulty_level");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT")
                        .HasColumnName("image_path");

                    b.Property<string>("Transcription")
                        .HasColumnType("TEXT")
                        .HasColumnName("transcription");

                    b.Property<string>("Word")
                        .HasColumnType("TEXT")
                        .HasColumnName("word");

                    b.HasKey("Id");

                    b.ToTable("Card_Table");
                });

            modelBuilder.Entity("Memento.DAL.DeckModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("deck_id");

                    b.Property<string>("DeckName")
                        .HasColumnType("TEXT")
                        .HasColumnName("deck_name");

                    b.Property<int>("NumberOfCards")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number_of_cards");

                    b.Property<string>("TagName")
                        .HasColumnType("TEXT")
                        .HasColumnName("tag_name");

                    b.HasKey("Id");

                    b.ToTable("Deck_Table");
                });

            modelBuilder.Entity("Memento.DAL.DeckToCardModel", b =>
                {
                    b.Property<int>("CardID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("card_id");

                    b.Property<int>("DeckID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deck_id");

                    b.HasKey("CardID", "DeckID");

                    b.HasIndex("DeckID");

                    b.ToTable("Deck_To_Card_Table");
                });

            modelBuilder.Entity("Memento.DAL.TagToCardModel", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("TEXT")
                        .HasColumnName("tag_name");

                    b.Property<int>("CardID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("card_id");

                    b.HasKey("TagName", "CardID");

                    b.HasIndex("CardID");

                    b.ToTable("Tag_To_Card_Table");
                });

            modelBuilder.Entity("Memento.DAL.DeckToCardModel", b =>
                {
                    b.HasOne("Memento.DAL.CardModel", "Card")
                        .WithMany("Decks")
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Memento.DAL.DeckModel", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("Memento.DAL.TagToCardModel", b =>
                {
                    b.HasOne("Memento.DAL.CardModel", "Card")
                        .WithMany("Tags")
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Memento.DAL.CardModel", b =>
                {
                    b.Navigation("Decks");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Memento.DAL.DeckModel", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
